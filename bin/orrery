#!perl

use 5.12.0;
use strict;
use warnings;

use Astro::Coords::Angle;
use File::Basename;
use Curses::Orrery;
use Getopt::Std;
use Math::Units qw(convert);
use Scalar::Util qw(looks_like_number);


sub main::HELP_MESSAGE {
    print 'usage: ', basename($0),
          " [-a|-u] LATITUDE LONGITUDE [ALTITUDE]\n\n";
    print "  LATITUDE and LONGITUDE can be decimal or (-)HH:MM:SS\n";
    print "  ALTITUDE assumes meters if no unit is specified\n";
}

sub main::VERSION_MESSAGE {
    print basename($0), ' ', $Orrery::VERSION, "\n";
}

sub main {
    my ($opt_a, $opt_u);
    getopts('au');

    my ($lat, $long, $alt) = @ARGV;

    # parse altitude
    $alt //= 0;
    if ($alt =~ /^(\d+)\s*([a-z]+)$/i) {
        $alt = convert($1, $2, 'meters');
    }

    # error out if args aren't sane
    unless (defined $lat && defined $long && looks_like_number $alt) {
        main::VERSION_MESSAGE;
        main::HELP_MESSAGE;
        exit 1;
    }

    # unicode defaults to on unless -a is specified.
    # Curses::Orrery will turn it off if unsupported
    my $unicode = !$opt_a;

    # start up a Curses::Orrery
    my $orrery = Curses::Orrery->new(long    => $long,
                                     lat     => $lat,
                                     alt     => $alt,
                                     unicode => $unicode);
    $orrery->mainloop();

    exit 0;
}


&main;
